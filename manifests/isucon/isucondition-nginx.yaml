apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.18.0 # 開催当時の(おそらく)stable
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              readOnly: true
              subPath: nginx.conf
              name: nginx-conf
            - mountPath: /etc/nginx/sites-enabled/isucondition.conf
              readOnly: true
              subPath: isucondition.conf
              name: isucondition-conf
          resources:
            limits:
              cpu: 2000m
              memory: 4Gi
      volumes:
        - name: nginx-conf
          configMap: 
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: isucondition-conf
          configMap: 
            name: isucondition-conf
            items:
              - key: isucondition.conf
                path: isucondition.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user  www-data;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /run/nginx.pid;


    events {
      worker_connections  1024;
    }


    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

      sendfile        on;
      #tcp_nopush     on;

      keepalive_timeout  65;

      #gzip  on;

      include /etc/nginx/conf.d/*.conf;
      include /etc/nginx/sites-enabled/*.conf;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: isucondition-conf
data:
  isucondition.conf: |
    # server {
    #   listen 443 ssl http2;

    #   ssl_certificate /etc/nginx/certificates/tls-cert.pem;
    #   ssl_certificate_key /etc/nginx/certificates/tls-key.pem;

    #   location / {
    #     proxy_set_header Host $http_host;
    #     proxy_pass http://isucondition:3000;
    #   }
    # }
    server {
      listen 80;

      location / {
        proxy_set_header Host $http_host;
        proxy_pass http://isucondition:3000;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: ClusterIP
  ports:
    - name: nginx
      port: 80
  selector:
    app: nginx
